{
  "contractName": "ERC721BasicTokenMock",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "exists",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052341561000f57600080fd5b6112f28061001e6000396000f3006060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063081812fc146100b4578063095ea7b31461011757806323b872dd1461015957806340c10f19146101ba57806342842e0e146101fc5780634f558e791461025d5780636352211e1461029857806370a08231146102fb578063a22cb46514610348578063b88d4fde1461038c578063e985e9c514610430575b600080fd5b34156100bf57600080fd5b6100d560048080359060200190919050506104a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012257600080fd5b610157600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506104dd565b005b341561016457600080fd5b6101b8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106a3565b005b34156101c557600080fd5b6101fa600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107ba565b005b341561020757600080fd5b61025b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107c8565b005b341561026857600080fd5b61027e6004808035906020019091905050610800565b604051808215151515815260200191505060405180910390f35b34156102a357600080fd5b6102b96004808035906020019091905050610871565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030657600080fd5b610332600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108ee565b6040518082815260200191505060405180910390f35b341561035357600080fd5b61038a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050610972565b005b341561039757600080fd5b61042e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610aae565b005b341561043b57600080fd5b610486600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610aed565b604051808215151515815260200191505060405180910390f35b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e882610871565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561052557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061056557506105648133610aed565b5b151561057057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610591836104a0565b73ffffffffffffffffffffffffffffffffffffffff161415806105e15750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561069e57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b806106ae3382610b81565b15156106b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156106f557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561073157600080fd5b61073b8483610c16565b6107458483610d7f565b61074f8383610ead565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6107c48282611005565b5050565b806107d33382610b81565b15156107de57600080fd5b6107fa8484846020604051908101604052806000815250610aae565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156108e557600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561092b57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109ad57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b81610ab93382610b81565b1515610ac457600080fd5b610acf8585856106a3565b610adb858585856110b5565b1515610ae657600080fd5b5050505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080610b8d83610871565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bfc57508373ffffffffffffffffffffffffffffffffffffffff16610be4846104a0565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c0d5750610c0c8185610aed565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16610c3682610871565b73ffffffffffffffffffffffffffffffffffffffff16141515610c5857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d7b5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b8173ffffffffffffffffffffffffffffffffffffffff16610d9f82610871565b73ffffffffffffffffffffffffffffffffffffffff16141515610dc157600080fd5b610e146001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127e90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f1a57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fbe6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561104157600080fd5b61104b8282610ead565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000806110d78573ffffffffffffffffffffffffffffffffffffffff166112b3565b15156110e65760019150611275565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a857808201518184015260208101905061118d565b50505050905090810190601f1680156111d55780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15156111f557600080fd5b5af1151561120257600080fd5b50505060405180519050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b600082821115151561128c57fe5b818303905092915050565b600081830190508281101515156112aa57fe5b80905092915050565b600080823b9050600081119150509190505600a165627a7a72305820049da46445863c14ba6d82dc9ce965d7e40e7c0c9d8ad7aca96d05f6aa8b88850029",
  "deployedBytecode": "0x6060604052600436106100af576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063081812fc146100b4578063095ea7b31461011757806323b872dd1461015957806340c10f19146101ba57806342842e0e146101fc5780634f558e791461025d5780636352211e1461029857806370a08231146102fb578063a22cb46514610348578063b88d4fde1461038c578063e985e9c514610430575b600080fd5b34156100bf57600080fd5b6100d560048080359060200190919050506104a0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561012257600080fd5b610157600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506104dd565b005b341561016457600080fd5b6101b8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506106a3565b005b34156101c557600080fd5b6101fa600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107ba565b005b341561020757600080fd5b61025b600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506107c8565b005b341561026857600080fd5b61027e6004808035906020019091905050610800565b604051808215151515815260200191505060405180910390f35b34156102a357600080fd5b6102b96004808035906020019091905050610871565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030657600080fd5b610332600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506108ee565b6040518082815260200191505060405180910390f35b341561035357600080fd5b61038a600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080351515906020019091905050610972565b005b341561039757600080fd5b61042e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610aae565b005b341561043b57600080fd5b610486600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610aed565b604051808215151515815260200191505060405180910390f35b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104e882610871565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561052557600080fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061056557506105648133610aed565b5b151561057057600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16610591836104a0565b73ffffffffffffffffffffffffffffffffffffffff161415806105e15750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b1561069e57826001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a35b505050565b806106ae3382610b81565b15156106b957600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515156106f557600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561073157600080fd5b61073b8483610c16565b6107458483610d7f565b61074f8383610ead565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040518082815260200191505060405180910390a350505050565b6107c48282611005565b5050565b806107d33382610b81565b15156107de57600080fd5b6107fa8484846020604051908101604052806000815250610aae565b50505050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008060008084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156108e557600080fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561092b57600080fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156109ad57600080fd5b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b81610ab93382610b81565b1515610ac457600080fd5b610acf8585856106a3565b610adb858585856110b5565b1515610ae657600080fd5b5050505050565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080610b8d83610871565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bfc57508373ffffffffffffffffffffffffffffffffffffffff16610be4846104a0565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c0d5750610c0c8185610aed565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff16610c3682610871565b73ffffffffffffffffffffffffffffffffffffffff16141515610c5857600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610d7b5760006001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a35b5050565b8173ffffffffffffffffffffffffffffffffffffffff16610d9f82610871565b73ffffffffffffffffffffffffffffffffffffffff16141515610dc157600080fd5b610e146001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461127e90919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600080600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610f1a57600080fd5b8160008083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fbe6001600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461129790919063ffffffff16565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561104157600080fd5b61104b8282610ead565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000806110d78573ffffffffffffffffffffffffffffffffffffffff166112b3565b15156110e65760019150611275565b8473ffffffffffffffffffffffffffffffffffffffff1663f0b9e5ba8786866040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156111a857808201518184015260208101905061118d565b50505050905090810190601f1680156111d55780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15156111f557600080fd5b5af1151561120257600080fd5b50505060405180519050905063f0b9e5ba7c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505b50949350505050565b600082821115151561128c57fe5b818303905092915050565b600081830190508281101515156112aa57fe5b80905092915050565b600080823b9050600081119150509190505600a165627a7a72305820049da46445863c14ba6d82dc9ce965d7e40e7c0c9d8ad7aca96d05f6aa8b88850029",
  "sourceMap": "182:145:14:-;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "182:145:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:117:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3157:389;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5339:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;236:89:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6321:251:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2569:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2201:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7285:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4745:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3787:117;3847:7;3873:14;:24;3888:8;3873:24;;;;;;;;;;;;;;;;;;;;;3866:31;;3787:117;;;:::o;3157:389::-;3222:13;3238:17;3246:8;3238:7;:17::i;:::-;3222:33;;3280:5;3273:12;;:3;:12;;;;3265:21;;;;;;;;3318:5;3304:19;;:10;:19;;;:58;;;;3327:35;3344:5;3351:10;3327:16;:35::i;:::-;3304:58;3296:67;;;;;;;;3411:1;3378:35;;:21;3390:8;3378:11;:21::i;:::-;:35;;;;:56;;;;3432:1;3417:17;;:3;:17;;;;3378:56;3374:166;;;3477:3;3450:14;:24;3465:8;3450:24;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;3515:3;3499:30;;3508:5;3499:30;;;3520:8;3499:30;;;;;;;;;;;;;;;;;;3374:166;3157:389;;;:::o;5339:342::-;5426:8;1562:39;1580:10;1592:8;1562:17;:39::i;:::-;1554:48;;;;;;;;5471:1;5454:19;;:5;:19;;;;5446:28;;;;;;;;5507:1;5492:17;;:3;:17;;;;5484:26;;;;;;;;5521:30;5535:5;5542:8;5521:13;:30::i;:::-;5561:32;5577:5;5584:8;5561:15;:32::i;:::-;5603:25;5614:3;5619:8;5603:10;:25::i;:::-;5660:3;5644:30;;5653:5;5644:30;;;5665:8;5644:30;;;;;;;;;;;;;;;;;;5339:342;;;;:::o;236:89:14:-;294:26;306:3;311:8;294:11;:26::i;:::-;236:89;;:::o;6321:251:5:-;6450:8;1562:39;1580:10;1592:8;1562:17;:39::i;:::-;1554:48;;;;;;;;6523:42;6540:5;6547:3;6552:8;6523:42;;;;;;;;;;;;;:16;:42::i;:::-;6321:251;;;;:::o;2569:150::-;2624:4;2640:13;2656:10;:20;2667:8;2656:20;;;;;;;;;;;;;;;;;;;;;2640:36;;2710:1;2693:19;;:5;:19;;;;2686:26;;2569:150;;;;:::o;2201:178::-;2257:7;2276:13;2292:10;:20;2303:8;2292:20;;;;;;;;;;;;;;;;;;;;;2276:36;;2347:1;2330:19;;:5;:19;;;;2322:28;;;;;;;;2367:5;2360:12;;2201:178;;;;:::o;1824:152::-;1880:7;1925:1;1907:20;;:6;:20;;;;1899:29;;;;;;;;1945:16;:24;1962:6;1945:24;;;;;;;;;;;;;;;;1938:31;;1824:152;;;:::o;4203:219::-;4291:10;4284:17;;:3;:17;;;;4276:26;;;;;;;;4349:9;4312:17;:29;4330:10;4312:29;;;;;;;;;;;;;;;:34;4342:3;4312:34;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;4400:3;4373:42;;4388:10;4373:42;;;4405:9;4373:42;;;;;;;;;;;;;;;;;;;;;;4203:219;;:::o;7285:336::-;7435:8;1562:39;1580:10;1592:8;1562:17;:39::i;:::-;1554:48;;;;;;;;7459:34;7472:5;7479:3;7484:8;7459:12;:34::i;:::-;7560:53;7585:5;7592:3;7597:8;7607:5;7560:24;:53::i;:::-;7552:62;;;;;;;;7285:336;;;;;:::o;4745:148::-;4827:4;4850:17;:25;4868:6;4850:25;;;;;;;;;;;;;;;:36;4876:9;4850:36;;;;;;;;;;;;;;;;;;;;;;;;;4843:43;;4745:148;;;;:::o;7984:250::-;8070:4;8086:13;8102:17;8110:8;8102:7;:17::i;:::-;8086:33;;8148:5;8136:17;;:8;:17;;;:54;;;;8182:8;8157:33;;:21;8169:8;8157:11;:21::i;:::-;:33;;;8136:54;:91;;;;8194:33;8211:5;8218:8;8194:16;:33::i;:::-;8136:91;8129:98;;7984:250;;;;;:::o;8966:291::-;9071:6;9050:27;;:17;9058:8;9050:7;:17::i;:::-;:27;;;9042:36;;;;;;;;9128:1;9092:38;;:14;:24;9107:8;9092:24;;;;;;;;;;;;;;;;;;;;;:38;;;;9088:163;;;9181:1;9146:14;:24;9161:8;9146:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;9227:1;9202:38;;9211:6;9202:38;;;9231:8;9202:38;;;;;;;;;;;;;;;;;;9088:163;8966:291;;:::o;10041:228::-;10147:5;10126:26;;:17;10134:8;10126:7;:17::i;:::-;:26;;;10118:35;;;;;;;;10189:30;10217:1;10189:16;:23;10206:5;10189:23;;;;;;;;;;;;;;;;:27;;:30;;;;:::i;:::-;10163:16;:23;10180:5;10163:23;;;;;;;;;;;;;;;:56;;;;10260:1;10229:10;:20;10240:8;10229:20;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;10041:228;;:::o;9532:218::-;9642:1;9610:34;;:10;:20;9621:8;9610:20;;;;;;;;;;;;;;;;;;;;;:34;;;9602:43;;;;;;;;9678:3;9655:10;:20;9666:8;9655:20;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;9715:28;9741:1;9715:16;:21;9732:3;9715:21;;;;;;;;;;;;;;;;:25;;:28;;;;:::i;:::-;9691:16;:21;9708:3;9691:21;;;;;;;;;;;;;;;:52;;;;9532:218;;:::o;8502:183::-;8590:1;8575:17;;:3;:17;;;;8567:26;;;;;;;;8603:25;8614:3;8619:8;8603:10;:25::i;:::-;8664:3;8643:35;;8660:1;8643:35;;;8669:8;8643:35;;;;;;;;;;;;;;;;;;8502:183;;:::o;10800:372::-;10957:4;11045:13;10982:16;:3;:14;;;:16::i;:::-;10981:17;10977:59;;;11021:4;11014:11;;;;10977:59;11076:3;11061:36;;;11098:5;11105:8;11115:5;11061:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11061:60:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11045:76;;601:10;11149:15;;11139:25;;;:6;:25;;;;11131:34;;10800:372;;;;;;;;:::o;906:120:11:-;964:7;995:1;990;:6;;983:14;;;;;;1018:1;1014;:5;1007:12;;906:120;;;;:::o;1096:137::-;1154:9;1183:1;1179;:5;1175:9;;1206:1;1201;:6;;1194:14;;;;;;1225:1;1218:8;;1096:137;;;;:::o;454:611:1:-;511:4;527:12;969:4;957:17;949:25;;1057:1;1050:4;:8;1043:15;;454:611;;;;:::o",
  "source": "pragma solidity ^0.4.21;\n\nimport \"../ERC721BasicToken.sol\";\n\n\n/**\n * @title ERC721BasicTokenMock\n * This mock just provides a public mint and burn functions for testing purposes\n */\ncontract ERC721BasicTokenMock is ERC721BasicToken {\n  function mint(address _to, uint256 _tokenId) public {\n    super._mint(_to, _tokenId);\n  }\n}\n",
  "sourcePath": "/Users/andrew/Programs/darkwinds/contracts/mocks/ERC721BasicTokenMock.sol",
  "ast": {
    "absolutePath": "/Users/andrew/Programs/darkwinds/contracts/mocks/ERC721BasicTokenMock.sol",
    "exportedSymbols": {
      "ERC721BasicTokenMock": [
        2304
      ]
    },
    "id": 2305,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2285,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/Users/andrew/Programs/darkwinds/contracts/ERC721BasicToken.sol",
        "file": "../ERC721BasicToken.sol",
        "id": 2286,
        "nodeType": "ImportDirective",
        "scope": 2305,
        "sourceUnit": 1756,
        "src": "26:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2287,
              "name": "ERC721BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1755,
              "src": "215:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BasicToken_$1755",
                "typeString": "contract ERC721BasicToken"
              }
            },
            "id": 2288,
            "nodeType": "InheritanceSpecifier",
            "src": "215:16:14"
          }
        ],
        "contractDependencies": [
          1198,
          1755
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721BasicTokenMock\nThis mock just provides a public mint and burn functions for testing purposes",
        "fullyImplemented": true,
        "id": 2304,
        "linearizedBaseContracts": [
          2304,
          1755,
          1198
        ],
        "name": "ERC721BasicTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2302,
              "nodeType": "Block",
              "src": "288:37:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2298,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "306:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2299,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "311:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2295,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "294:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721BasicTokenMock_$2304",
                          "typeString": "contract super ERC721BasicTokenMock"
                        }
                      },
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1605,
                      "src": "294:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "294:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2301,
                  "nodeType": "ExpressionStatement",
                  "src": "294:26:14"
                }
              ]
            },
            "documentation": null,
            "id": 2303,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2303,
                  "src": "250:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2303,
                  "src": "263:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "249:31:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:14"
            },
            "scope": 2304,
            "src": "236:89:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2305,
        "src": "182:145:14"
      }
    ],
    "src": "0:328:14"
  },
  "legacyAST": {
    "absolutePath": "/Users/andrew/Programs/darkwinds/contracts/mocks/ERC721BasicTokenMock.sol",
    "exportedSymbols": {
      "ERC721BasicTokenMock": [
        2304
      ]
    },
    "id": 2305,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2285,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:14"
      },
      {
        "absolutePath": "/Users/andrew/Programs/darkwinds/contracts/ERC721BasicToken.sol",
        "file": "../ERC721BasicToken.sol",
        "id": 2286,
        "nodeType": "ImportDirective",
        "scope": 2305,
        "sourceUnit": 1756,
        "src": "26:33:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 2287,
              "name": "ERC721BasicToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1755,
              "src": "215:16:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BasicToken_$1755",
                "typeString": "contract ERC721BasicToken"
              }
            },
            "id": 2288,
            "nodeType": "InheritanceSpecifier",
            "src": "215:16:14"
          }
        ],
        "contractDependencies": [
          1198,
          1755
        ],
        "contractKind": "contract",
        "documentation": "@title ERC721BasicTokenMock\nThis mock just provides a public mint and burn functions for testing purposes",
        "fullyImplemented": true,
        "id": 2304,
        "linearizedBaseContracts": [
          2304,
          1755,
          1198
        ],
        "name": "ERC721BasicTokenMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2302,
              "nodeType": "Block",
              "src": "288:37:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2298,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "306:3:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2299,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "311:8:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2295,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2568,
                        "src": "294:5:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721BasicTokenMock_$2304",
                          "typeString": "contract super ERC721BasicTokenMock"
                        }
                      },
                      "id": 2297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1605,
                      "src": "294:11:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "294:26:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2301,
                  "nodeType": "ExpressionStatement",
                  "src": "294:26:14"
                }
              ]
            },
            "documentation": null,
            "id": 2303,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2290,
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 2303,
                  "src": "250:11:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 2303,
                  "src": "263:16:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "249:31:14"
            },
            "payable": false,
            "returnParameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "288:0:14"
            },
            "scope": 2304,
            "src": "236:89:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2305,
        "src": "182:145:14"
      }
    ],
    "src": "0:328:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.21+commit.dfe3193c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-26T05:59:14.849Z"
}